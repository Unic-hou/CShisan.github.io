<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>线性表</title>
      <link href="/2019/09/22/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
      <url>/2019/09/22/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Oct 03 2019 22:21:30 GMT+0800 (GMT+08:00) --><br><hr>初触顺序表,让我忙活了两三个小时,因为书本伪码的原因,很多都需要宏定义。<p>关于一些问题:不知道是不是C++环境的原因,某些函数需要的参数为地址,但只<br>需要传名称即可[如ListInsert(sq,i,e)中的e]</p><p>关于一些细节:Sleep()函数为windows.h头文件下的函数;getchar()函数吸<br>取Enter</p><hr><br><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#define MAXSIZE 100</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">typedef int ElemType;</span><br><span class="line">typedef int Status;</span><br><span class="line">#define OVERFLOW -1</span><br><span class="line">#define OK 1</span><br><span class="line">#define ERROR 0</span><br><span class="line">#include &lt;windows.h&gt;</span><br><span class="line"></span><br><span class="line">typedef struct&#123; //定义顺序表</span><br><span class="line">    ElemType *elem;</span><br><span class="line">    int length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Status InitList(SqList &amp;L)&#123;//顺序表初始化</span><br><span class="line">    L.elem=new ElemType[MAXSIZE];</span><br><span class="line">    if(!L.elem) exit(OVERFLOW);</span><br><span class="line">    L.length=0;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Status ListInsert(SqList &amp;L,int i,ElemType e)&#123;//顺序表插入</span><br><span class="line">    if((i&lt;1)||(i&gt;L.length+1)) return ERROR;</span><br><span class="line">    if(L.length==MAXSIZE) return ERROR;</span><br><span class="line">    for(int j=L.length-1;j&gt;=i-1;j--)</span><br><span class="line">        L.elem[j+1]=L.elem[j];</span><br><span class="line">    L.elem[i-1]=e;</span><br><span class="line">    ++L.length;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status GetElem(SqList L,int i,ElemType &amp;e)&#123;//顺序表取值</span><br><span class="line">    if(i&lt;1||i&gt;L.length) return ERROR;</span><br><span class="line">    e=L.elem[i-1];</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int LocateElem(SqList L,ElemType e)&#123;//顺序表查值</span><br><span class="line">    for(int i=0;i&lt;L.length;i++)</span><br><span class="line">        if(L.elem[i]==e) return i+1;</span><br><span class="line">        else if(i==L.length-1)printf(&quot;顺序表中不存在该数\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status ListDelete(SqList &amp;L,int i)&#123;//顺序表删除</span><br><span class="line">    if((i&lt;1)||(i&gt;L.length)) return ERROR;</span><br><span class="line">    for(int j=i;j&lt;=L.length-1;j++)</span><br><span class="line">        L.elem[j-1]=L.elem[j];</span><br><span class="line">    --L.length;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void p(SqList L)&#123;//循环输出顺序表</span><br><span class="line">    printf(&quot;顺序表:\n&quot;);</span><br><span class="line">    for(int i=0;i&lt;L.length;i++)&#123;</span><br><span class="line">        printf(&quot;%d   &quot;,L.elem[i]);</span><br><span class="line">        if((i+1)%5==0) printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int e,i,j;</span><br><span class="line">    char a;</span><br><span class="line">    printf(&quot;========创建顺序表========\n\n&quot;);</span><br><span class="line">    SqList sq;</span><br><span class="line">    Sleep (150);</span><br><span class="line">    printf(&quot;    初始化顺序表中.&quot;);Sleep (50);</span><br><span class="line">printf(&quot;.&quot;);Sleep (150);printf(&quot;.&quot;);</span><br><span class="line">Sleep (250);printf(&quot;.&quot;);Sleep (350);</span><br><span class="line">printf(&quot;.&quot;);Sleep (450);printf(&quot;.\n\n&quot;);</span><br><span class="line">    InitList(sq);</span><br><span class="line">    printf(&quot;=========创建完成=========\n\n&quot;);</span><br><span class="line">    Sleep (700);</span><br><span class="line">//上面一段无聊的代码纯属好玩,可以无视</span><br><span class="line"></span><br><span class="line">    printf(&quot;是否需要对顺序表循环插入值?(y/n):&quot;);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;a);</span><br><span class="line">    if(a==&apos;y&apos;)&#123;</span><br><span class="line">        printf(&quot;需要输入的值的数量(1~100):&quot;);</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;j);</span><br><span class="line">        for(i=1;i&lt;j+1;i++)&#123;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;e);</span><br><span class="line">            ListInsert(sq,i,e);</span><br><span class="line">        &#125;</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();//为了防止Enter作恶,吸取Enter</span><br><span class="line"></span><br><span class="line">    printf(&quot;是否需要对顺序表插入值?(y/n):&quot;);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;a);</span><br><span class="line">    if(a==&apos;y&apos;)&#123;</span><br><span class="line">        printf(&quot;你希望对i个位置插入值,i=&quot;);</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">        printf(&quot;你希望对%d个位置插入的值:&quot;,i);</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;e);</span><br><span class="line">        ListInsert(sq,i,e);</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    printf(&quot;是否需要获取顺序表某个值?(y/n):&quot;);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;a);</span><br><span class="line">    if(a==&apos;y&apos;)&#123;</span><br><span class="line">    printf(&quot;你想获得第i个位置的值,i=&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">    GetElem(sq,i,e);</span><br><span class="line">    printf(&quot;第%d个位置的值为%d\n\n&quot;,i,e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    printf(&quot;是否需要查找顺序表某个值?(y/n):&quot;);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;a);</span><br><span class="line">    if(a==&apos;y&apos;)&#123;</span><br><span class="line">    printf(&quot;你想查找的值:&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;e);</span><br><span class="line">    printf(&quot;你想查找的值在顺序表的第%d个位置\n\n&quot;,LocateElem(sq,e));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    printf(&quot;是否需要对顺序表删除值?(y/n):&quot;);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;a);</span><br><span class="line">    if(a==&apos;y&apos;)&#123;</span><br><span class="line">        printf(&quot;你希望对i个位置删除值,i=&quot;);</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">        ListDelete(sq,i);</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><hr>接下来是单链表，单链表没什么好说的，有了敲顺序表的经验，单链表做出来就比较顺利了<hr><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#define OK 1</span><br><span class="line">#define ERROR 0</span><br><span class="line">typedef int ElemType;</span><br><span class="line">typedef int Status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">typedef struct LNode&#123;  //定义单链表</span><br><span class="line">    ElemType data;</span><br><span class="line">    struct LNode *next;</span><br><span class="line">&#125;*LinkList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Status InitList(LinkList &amp;L)&#123; //单链表初始化</span><br><span class="line">    L=new LNode;</span><br><span class="line">    L-&gt;next=NULL;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status ListInsert(LinkList &amp;L,int i,ElemType e)&#123; //单链表插入</span><br><span class="line">    LinkList p,s;</span><br><span class="line">    p=L;int j=0;</span><br><span class="line">    while(p&amp;&amp;(j&lt;i-1))&#123;</span><br><span class="line">        p=p-&gt;next;j++;</span><br><span class="line">    &#125;</span><br><span class="line">    if(!p||j&gt;i-1) return ERROR;</span><br><span class="line">    s=new LNode;</span><br><span class="line">    s-&gt;data=e;</span><br><span class="line">    s-&gt;next=p-&gt;next;</span><br><span class="line">    p-&gt;next=s;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status GetElem(LinkList &amp;L,int i,ElemType &amp;e)&#123; //单链表取值</span><br><span class="line">    LinkList p;</span><br><span class="line">    p=L-&gt;next;int j=1;</span><br><span class="line">    while(p&amp;&amp;j&lt;i)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    if(!p||j&gt;i)return ERROR;</span><br><span class="line">    e=p-&gt;data;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LinkList LocateELem(LinkList L,ElemType e)&#123; //单链表查值</span><br><span class="line">    LinkList p;</span><br><span class="line">    p=L-&gt;next;</span><br><span class="line">    while(p&amp;&amp;p-&gt;data!=e)&#123;</span><br><span class="line">     p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    return p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status ListDelete(LinkList &amp;L,int i)&#123; //单链表删除</span><br><span class="line">    LinkList p,q;</span><br><span class="line">    p=L;int j=0;</span><br><span class="line">    while((p-&gt;next)&amp;&amp;(j&lt;i-1))&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    if(!(p-&gt;next)||(j&gt;i-1)) return ERROR;</span><br><span class="line">    q=p-&gt;next;</span><br><span class="line">    p-&gt;next=q-&gt;next;</span><br><span class="line">    delete q;</span><br><span class="line">    return OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CreateList_H(LinkList &amp;L,int i)&#123; //前插法</span><br><span class="line">    LinkList p;</span><br><span class="line">    L=new LNode;</span><br><span class="line">    L-&gt;next=NULL;</span><br><span class="line">    for(int j=0;j&lt;i;j++)&#123;</span><br><span class="line">        p=new LNode;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;p-&gt;data);</span><br><span class="line">        p-&gt;next=L-&gt;next;</span><br><span class="line">        L-&gt;next=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CreateList_R(LinkList &amp;L,int i)&#123; //后插法</span><br><span class="line">    LinkList r,p;</span><br><span class="line">    L=new LNode;</span><br><span class="line">    L-&gt;next=NULL;</span><br><span class="line">    r=L;</span><br><span class="line">    for(int j=0;j&lt;i;j++)&#123;</span><br><span class="line">        p=new LNode;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;p-&gt;data);</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        r-&gt;next=p;</span><br><span class="line">        r=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void reList(LinkList &amp;L)&#123; //循环输出单链表</span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    if(p==NULL)&#123;</span><br><span class="line">        printf(&quot;ERROR\n\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        int i=0;</span><br><span class="line">        printf(&quot;单链表:\n&quot;);</span><br><span class="line">        while(p)&#123;</span><br><span class="line">            printf(&quot;%-5d&quot;,p-&gt;data);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">            i++;</span><br><span class="line">            if(i%5==0)printf(&quot;\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int i,e;LinkList p;char a;</span><br><span class="line">    LinkList L;//定义单链表</span><br><span class="line">    InitList(L);//初始化单链表</span><br><span class="line"></span><br><span class="line">    printf(&quot;请输入需要插入单链表的元素个数:&quot;);scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">    printf(&quot;请输入需要插入单链表的元素:&quot;);</span><br><span class="line">    //CreateList_H(L,i);//单链表前插法</span><br><span class="line">    CreateList_R(L,i);//单链表后插法</span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    printf(&quot;请输入需要插入单链表的元素位置:&quot;);scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">    printf(&quot;请输入需要插入单链表的元素:&quot;);scanf(&quot;%d&quot;,&amp;e);</span><br><span class="line">    ListInsert(L,i,e);//单链表插入</span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line">    printf(&quot;请输入需要获取的单链表元素位置:&quot;);scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">    GetElem(L,i,e);//单链表取值</span><br><span class="line">    printf(&quot;第%d个元素是%d\n\n&quot;,i,e);</span><br><span class="line"></span><br><span class="line">    printf(&quot;请输入需要查找的值:&quot;);scanf(&quot;%d&quot;,&amp;e);</span><br><span class="line">    p=LocateELem(L,e);//单链表查值</span><br><span class="line">    if(p==NULL)&#123;</span><br><span class="line">        printf(&quot;单链表不存在该值\n\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;单链表中该值地址为%d\n\n&quot;,p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printf(&quot;请输入需要删除的单链表元素位置:&quot;);scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">    ListDelete(L,i);//单链表删除</span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><center>如果哪个地方可以简化的可以评论告诉我</center><hr><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/19/hello-world/"/>
      <url>/2019/09/19/hello-world/</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Oct 03 2019 22:21:30 GMT+0800 (GMT+08:00) --><br><p>欢迎来到<a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>! 这是我的第一篇博客.如果你在阅读过程中有任何疑问,你都可以在<a href="https://cshisan.github.io/" target="_blank" rel="noopener">这里</a>找到你想要的答案或者你可以在<a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>联系我.</p><p>Welcome to <a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>! This is my very first post.If you get any problems when Reading, you can find the answer in <a href="https://cshisan.github.io/" target="_blank" rel="noopener">Here</a> or you can ask me on <a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>へようこそ！ これは私の最初の投稿です。読書中に問題が発生した場合は、<a href="https://cshisan.github.io/" target="_blank" rel="noopener">Here</a>または<a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>で質問してください。</p><br><h1 id="命令展示"><a href="#命令展示" class="headerlink" title="命令展示"></a>命令展示</h1><h2 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Writing</a></p><h2 id="创建一个页面"><a href="#创建一个页面" class="headerlink" title="创建一个页面"></a>创建一个页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page xxx(xxx代表页面名字)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Creat</a></p><h2 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Server</a></p><h2 id="创建一个静态文件包"><a href="#创建一个静态文件包" class="headerlink" title="创建一个静态文件包"></a>创建一个静态文件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Generating</a></p><h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
