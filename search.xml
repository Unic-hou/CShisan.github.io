<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java-构造方法</title>
      <link href="/2019/10/05/Java-%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95/"/>
      <url>/2019/10/05/Java-%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sun Oct 06 2019 04:06:12 GMT+0800 (GMT+08:00) --><br><p><font color="#FF6666" size="5em">对于</font>构造方法的作用大概也迷惑了我几天，首先我们来说一下构造方法的作用:初始化一个对象，给对象赋值。然后我就开始疑惑了，初始化对象?给对象赋值?不是可以直接在赋值的同时赋值么?最初的时候想构造方法到底有什么用，明明就可以直接用普通成员方法就可以做到了。</p><p><font color="#880000" size="4em">例如:</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">s()&#123;</span><br><span class="line">x=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#FF6666" size="5em">明明</font>就可以直接在声明同时赋值或者再不济的可以用普通方法进行赋值，何必再弄一个可有可无的构造方法。</p><p><font color="#FF6666" size="5em">但</font>我知道我的想法肯定是错的，因为既然我这种小白都能想到的问题，别人会想不到吗?所以我去百度、谷歌、简书、CSDN等，但都未能解决我的问题。虽然有人问出了我的问题，但是得到的回复都未能为我解答，同时我也相信未能解决那个人的问题。然后我又私聊老师，可是结果还是不太如意，老师回复了一些跟我百度差不多答案。莫得办法，我迫于无奈只好继续在百度上寻找答案，果然皇天不负有心人，我还是找到了令我相对满意的答案。<br></p><hr><p><font color="#880000" size="4em">原文引用:</font>(出处我忘了是哪了，只能跟原作者说声对不起了)</p><p><font color="#FF6666" size="5em">封闭</font>一个对象的构造函数，从而禁止对象在外部被初始化。典型的设计模式中的单例模式（可以google进一步了解）构造只读的，或者原子状态的对象。一个简单的例子，比如我们构造一个时间，包括年、月、日、时、分、秒几个字段，那么它们完整构成一个时间，如果我们不用构造函数，而是让调用者依次赋值，那么可能存在不确定的状态，比如只有日期，没有时间，或者反之。简化构造对象的复杂度。一个复杂对象有很多成员，大部分可能只需要一个默认值，不必要让调用者重复编写代码。对象集成和聚合的时候，减少重复代码。</p><hr><br><p><font color="#FF6666" size="5em">用</font>我的理解简单来说就是为了更方便地初始化。</p><p><font color="#880000" size="4em">例如:</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">S()&#123;</span><br><span class="line">x=<span class="number">1</span>;y=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">S(<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123;</span><br><span class="line">x=a;y=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#FF6666" size="5em">仔细一想</font>，如果x在定义的时候是未知的值，而是需要用户自行决定的，那么如果没有了构造方法是不是很麻烦?首先你要new完对象以后一个一个(.)成员变量然后进行赋值，现在一看构造方法是不是就有了存在的意义?没错，构造方法存在的意义就是使你更方便。那么我的脑子又开始想一些奇怪的东西了，无参构造有什么用?说到这里只要回头看一下原文这个问题就好解决了，"封闭一个对象的构造函数，从而禁止对象在外部被初始化"。</p><p><font color="#FF6666" size="5em">在</font>看接下来一段话的时候，请先捋清楚 <font color="#FF6666" size="5em">不去深究</font> 和 <font color="#FF6666" size="5em">不去好奇</font> 的区别!</p><p><font color="#FF6666" size="5em">好了</font>，关于构造方法的疑惑现在已经消除了，或许我可能还会存在些许疑惑，但我编程路上的其中一个导师对我说过的一句话其实还是很管用的，"你真的没必要深究一个东西，这样只会让你止步"。因为如果你还要深究的话，那你就是"钻牛角尖"了，其实很多事情都是1+1=2，不是吗?你能说出为什么1+1=2吗?世界的规则自然有人会去规定，所以很多事，你只要知道1+1=2即可。或者我换个让我们更容易接受的说法，很多事情你只要知道怎么用就够了，不信的话你可以回头想想你以前学的知识，还有多少还记得ta的基本原理是什么?(记忆力超群的人另外说哈)你只会记得ta是怎么用的，怎么样，是不是一下子感觉世界都清晰了?</p><p><font color="#FF6666" size="5em">这</font>就是我这小白在编程之路上(暂时)的理解，或许会帮到你或许不会，谁说的准呢。</p><p><font color="#FF6666" size="5em">好的</font>，本文结束。</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于编写博客的一些问题</title>
      <link href="/2019/10/04/%E5%85%B3%E4%BA%8E%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2019/10/04/%E5%85%B3%E4%BA%8E%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sun Oct 06 2019 04:06:12 GMT+0800 (GMT+08:00) --><br><hr><p><center>关于博文里的一些问题也是做好了好几天的功夫，接下来会细数一下。</center></p><p>●1.各个页面偏移问题</p><p>●2.各个页面的圆角化问题</p><p>●3.代码块问题</p><p>●4.MarkdownPad写博客问题</p><hr><hr>接下来所用到的代码都在主题站点...\source\css\_custom\custom.styl修改即可<hr><br><h1 id="页面偏移"><a href="#页面偏移" class="headerlink" title="页面偏移"></a>页面偏移</h1><br>这个相对来说花费的时间比较少,大概看一下代码就好了<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.use-motion .post-block, .use-motion .pagination, .use-motion .comments &#123;</span><br><span class="line">margin-top: <span class="number">2.5</span>em;<span class="comment">//偏离顶部</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="页面圆角化"><a href="#页面圆角化" class="headerlink" title="页面圆角化"></a>页面圆角化</h1><br>关于页面圆角化问题，我是真的找了几个小时才解决，因为是直接在页面中F12查看网页源码获取到了class名称，然后直接在[custom.styl]里面引用修改，但是发现完全没效果。接着我就开始了一段百度之旅，直到找到了以下解决方案，虽然还是没搞懂其中代码作用，但还是把效果做出来了。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.use-motion .post-block, .use-motion .pagination, .use-motion .comments &#123;</span><br><span class="line">margin-top: <span class="number">2.5</span>em;<span class="comment">//偏离顶部</span></span><br><span class="line">background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>); <span class="comment">//背景色</span></span><br><span class="line">border-radius: <span class="number">1</span>em; <span class="comment">//设置圆角</span></span><br><span class="line">width: <span class="number">60</span>em <span class="comment">//宽度</span></span><br><span class="line">margin-left: <span class="keyword">auto</span>;<span class="comment">//自动平衡左侧距离</span></span><br><span class="line">margin-right: <span class="keyword">auto</span>;<span class="comment">//自动平衡右侧距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>但是似乎我高兴得太早了，接着问题来了，在首页的博文列表里只有第一个博文显示圆角化，往下的博文并没有圆角化。(已解决)</p><p>再次经过反复调整，最终还是找到了方法，在主题全局值里直接修改[border-radius]即可</p><p>具体位置在[...\source\css\_variables\Gemini.styl] (这个根据个人选择的主题而变化)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$border-radius                    = <span class="number">1</span>em</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><br>关于代码块问题，我真的弄到头炸了，首先是代码不高亮问题，接着又是代码块居然是分4层结构的，分为[gutter pre]、[code pre]、代码块区底色和一层万恶的pre底色(万恶!万恶!万恶!)。关于这层万恶底色就不多谈了，反正我是头皮发麻。然后就是关于代码高亮，需要在``后加上程序语言，值得注意的是不知道为什么C++代码高亮不能设置圆角、半透明等操作，所以直接用以后直接用C高亮来代替C++高亮，如果你知道怎么完善代码可在评论纠正我，接下来直接放代码吧!<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.highlight.bash,.highlight.plain,.highlight.python,.highlight.java,.highlight.c&#123; <span class="comment">//代码块</span></span><br><span class="line">border-radius: <span class="number">1</span>em; <span class="comment">//设置圆角</span></span><br><span class="line">background: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.6</span>); <span class="comment">//背景色</span></span><br><span class="line">.gutter pre&#123;</span><br><span class="line">background: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.6</span>); <span class="comment">//背景色</span></span><br><span class="line">&#125;</span><br><span class="line">.code pre&#123;</span><br><span class="line">background: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//背景色</span></span><br><span class="line">&#125;</span><br><span class="line">tr&#123;<span class="comment">//万恶底色</span></span><br><span class="line">background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>); <span class="comment">//背景色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="适应手机"><a href="#适应手机" class="headerlink" title="适应手机"></a>适应手机</h1><br>起初的时候是直接把宽度设置成60em，因为原始的页面太大了，但设置好了以后发现手机不能正常适应屏幕了。 解决办法也简单，只要把宽度设置成80%就好了。由于懒得找了，所以直接在custom里面修改了。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.use-motion .post-block, .use-motion .pagination, .use-motion .comments &#123;</span><br><span class="line"><span class="comment">//文章</span></span><br><span class="line">margin-top: <span class="number">2.5</span>em;<span class="comment">//偏离顶部</span></span><br><span class="line">background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>); <span class="comment">//背景色</span></span><br><span class="line">border-radius: <span class="number">1</span>em; <span class="comment">//设置圆角</span></span><br><span class="line">width: <span class="number">80</span>% <span class="comment">//宽度</span></span><br><span class="line">margin-left: <span class="keyword">auto</span>;</span><br><span class="line">margin-right: <span class="keyword">auto</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接着问题又来了，网易云播放器变得奇怪了，同样被缩减成80%，无奈之下只能加多一行重置代码。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.player player-mid f-cb f-pr&#123; </span><br><span class="line"><span class="comment">//重置播放器,顺序不能变</span></span><br><span class="line">width: <span class="number">100</span>% <span class="comment">//宽度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="MarkdownPad写博客问题"><a href="#MarkdownPad写博客问题" class="headerlink" title="MarkdownPad写博客问题"></a>MarkdownPad写博客问题</h1><br>第一次接触写博客，在写博客的时候都是"磕磕碰碰"的，只能边百度边写，就算是本篇博文也同样是在百度中学习着写，好了废话不多说，写法放上。<br><br><p>由于代码问题以下博文编写代码用法中的英文标点&lt;&gt;改用为数学符号＜＞</p><p><font color="#880000" size="4em">注释：</font> ＜!-- XXXXXX --＞<br></p><p><font color="#880000" size="4em">新段落：</font> ＜p＞<br></p><p><font color="#880000" size="4em">换行：</font> ＜br＞<br></p><p><font color="#880000" size="4em">分割线：</font> ＜hr＞，<font color="#880000" size="4em">效果如下:</font></p><hr><br><p><font color="#880000" size="4em">内容居中：</font> ＜center＞内容＜/center＞</p><p><font color="#880000" size="4em">内容右对齐：</font> ＜div style="text-align:right"＞内容＜/div＞</p><p><font color="#880000" size="4em">内容左对齐：</font> ＜div style="text-align:left"＞内容＜/div＞<br></p><p><font color="#880000" size="4em">字体大小颜色：</font> ＜font color="#187892" size="number"＞内容＜/font＞</p><p><font color="#880000" size="4em">效果：</font><font color="#187892" size="number">内容</font><br><br><br></p><p><font color="#880000" size="4em">Todo list图标:</font></p><p>＜ul＞</p><p>＜li＞＜i class="fa fa-check-square"＞＜/i＞ 已完成＜/li＞</p><p>＜li＞＜i class="fa fa-square"＞＜/i＞ 未完成＜/li＞</p><p>＜/ul＞</p><p><font color="#880000" size="4em">效果如下:</font><ul><li><i class="fa fa-check-square"></i> 已完成</li><li><i class="fa fa-square"></i> 未完成</li></ul><br><br><br></p><p><font color="#880000" size="4em">引用内容:</font></p><p>＜blockquote＞引用内容＜/blockquote＞</p><p>如果前后间隙很小，可以像下面这样写</p><p>＜blockquote＞引用内容＜/blockquote\＞＜/p＞</p><p><font color="#880000" size="4em">效果如下:</font></p><blockquote>引用内容</blockquote><p></p><blockquote>引用内容</blockquote><p></p><br><br><br><br><hr><center>未完待续</center><hr><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线性表</title>
      <link href="/2019/09/22/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
      <url>/2019/09/22/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sun Oct 06 2019 04:06:12 GMT+0800 (GMT+08:00) --><br><hr><p>初触顺序表,让我忙活了两三个小时,因为书本伪码的原因,很多都需要宏定义。</p><p>关于一些问题:不知道是不是C++环境的原因,某些函数需要的参数为地址,但只 需要传名称即可[如ListInsert(sq,i,e)中的e]</p><p>关于一些细节:Sleep()函数为windows.h头文件下的函数;getchar()函数吸 取Enter</p><hr><br><h1 id="顺序表代码："><a href="#顺序表代码：" class="headerlink" title="顺序表代码："></a>顺序表代码：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OVERFLOW -1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span> <span class="comment">//定义顺序表</span></span><br><span class="line">    ElemType *elem;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>&#123;<span class="comment">//顺序表初始化</span></span><br><span class="line">    L.elem=<span class="keyword">new</span> ElemType[MAXSIZE];</span><br><span class="line">    <span class="keyword">if</span>(!L.elem) <span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType e)</span></span>&#123;<span class="comment">//顺序表插入</span></span><br><span class="line">    <span class="keyword">if</span>((i&lt;<span class="number">1</span>)||(i&gt;L.length+<span class="number">1</span>)) <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(L.length==MAXSIZE) <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=L.length<span class="number">-1</span>;j&gt;=i<span class="number">-1</span>;j--)</span><br><span class="line">        L.elem[j+<span class="number">1</span>]=L.elem[j];</span><br><span class="line">    L.elem[i<span class="number">-1</span>]=e;</span><br><span class="line">    ++L.length;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">GetElem</span><span class="params">(SqList L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>&#123;<span class="comment">//顺序表取值</span></span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;L.length) <span class="keyword">return</span> ERROR;</span><br><span class="line">    e=L.elem[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(SqList L,ElemType e)</span></span>&#123;<span class="comment">//顺序表查值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L.length;i++)</span><br><span class="line">        <span class="keyword">if</span>(L.elem[i]==e) <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==L.length<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">"顺序表中不存在该数\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListDelete</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i)</span></span>&#123;<span class="comment">//顺序表删除</span></span><br><span class="line">    <span class="keyword">if</span>((i&lt;<span class="number">1</span>)||(i&gt;L.length)) <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=L.length<span class="number">-1</span>;j++)</span><br><span class="line">        L.elem[j<span class="number">-1</span>]=L.elem[j];</span><br><span class="line">    --L.length;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">p</span><span class="params">(SqList L)</span></span>&#123;<span class="comment">//循环输出顺序表</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"顺序表:\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L.length;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d   "</span>,L.elem[i]);</span><br><span class="line">        <span class="keyword">if</span>((i+<span class="number">1</span>)%<span class="number">5</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> e,i,j;</span><br><span class="line">    <span class="keyword">char</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"========创建顺序表========\n\n"</span>);</span><br><span class="line">    SqList sq;</span><br><span class="line">    Sleep (<span class="number">150</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"    初始化顺序表中."</span>);Sleep (<span class="number">50</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"."</span>);Sleep (<span class="number">150</span>);<span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">Sleep (<span class="number">250</span>);<span class="built_in">printf</span>(<span class="string">"."</span>);Sleep (<span class="number">350</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"."</span>);Sleep (<span class="number">450</span>);<span class="built_in">printf</span>(<span class="string">".\n\n"</span>);</span><br><span class="line">    InitList(sq);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"=========创建完成=========\n\n"</span>);</span><br><span class="line">    Sleep (<span class="number">700</span>);</span><br><span class="line"><span class="comment">//上面一段无聊的代码纯属好玩,可以无视</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否需要对顺序表循环插入值?(y/n):"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="string">'y'</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"需要输入的值的数量(1~100):"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;j);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;j+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e);</span><br><span class="line">            ListInsert(sq,i,e);</span><br><span class="line">        &#125;</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();<span class="comment">//为了防止Enter作恶,吸取Enter</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否需要对顺序表插入值?(y/n):"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="string">'y'</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你希望对i个位置插入值,i="</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你希望对%d个位置插入的值:"</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e);</span><br><span class="line">        ListInsert(sq,i,e);</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否需要获取顺序表某个值?(y/n):"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="string">'y'</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"你想获得第i个位置的值,i="</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    GetElem(sq,i,e);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第%d个位置的值为%d\n\n"</span>,i,e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否需要查找顺序表某个值?(y/n):"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="string">'y'</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"你想查找的值:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"你想查找的值在顺序表的第%d个位置\n\n"</span>,LocateElem(sq,e));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否需要对顺序表删除值?(y/n):"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="string">'y'</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你希望对i个位置删除值,i="</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">        ListDelete(sq,i);</span><br><span class="line">        p(sq);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><hr>接下来是单链表，单链表没什么好说的，有了敲顺序表的经验，单链表做出来就比较顺利了<hr><br><h1 id="单链表代码："><a href="#单链表代码：" class="headerlink" title="单链表代码："></a>单链表代码：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span>  <span class="comment">//定义单链表</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*LinkList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(LinkList &amp;L)</span></span>&#123; <span class="comment">//单链表初始化</span></span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,ElemType e)</span></span>&#123; <span class="comment">//单链表插入</span></span><br><span class="line">    LinkList p,s;</span><br><span class="line">    p=L;<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;(j&lt;i<span class="number">-1</span>))&#123;</span><br><span class="line">        p=p-&gt;next;j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i<span class="number">-1</span>) <span class="keyword">return</span> ERROR;</span><br><span class="line">    s=<span class="keyword">new</span> LNode;</span><br><span class="line">    s-&gt;data=e;</span><br><span class="line">    s-&gt;next=p-&gt;next;</span><br><span class="line">    p-&gt;next=s;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">GetElem</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>&#123; <span class="comment">//单链表取值</span></span><br><span class="line">    LinkList p;</span><br><span class="line">    p=L-&gt;next;<span class="keyword">int</span> j=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i)<span class="keyword">return</span> ERROR;</span><br><span class="line">    e=p-&gt;data;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LinkList <span class="title">LocateELem</span><span class="params">(LinkList L,ElemType e)</span></span>&#123; <span class="comment">//单链表查值</span></span><br><span class="line">    LinkList p;</span><br><span class="line">    p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;p-&gt;data!=e)&#123;</span><br><span class="line">     p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListDelete</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span></span>&#123; <span class="comment">//单链表删除</span></span><br><span class="line">    LinkList p,q;</span><br><span class="line">    p=L;<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((p-&gt;next)&amp;&amp;(j&lt;i<span class="number">-1</span>))&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!(p-&gt;next)||(j&gt;i<span class="number">-1</span>)) <span class="keyword">return</span> ERROR;</span><br><span class="line">    q=p-&gt;next;</span><br><span class="line">    p-&gt;next=q-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList_H</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span></span>&#123; <span class="comment">//前插法</span></span><br><span class="line">    LinkList p;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">        p=<span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p-&gt;data);</span><br><span class="line">        p-&gt;next=L-&gt;next;</span><br><span class="line">        L-&gt;next=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList_R</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span></span>&#123; <span class="comment">//后插法</span></span><br><span class="line">    LinkList r,p;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">        p=<span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p-&gt;data);</span><br><span class="line">        p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        r-&gt;next=p;</span><br><span class="line">        r=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reList</span><span class="params">(LinkList &amp;L)</span></span>&#123; <span class="comment">//循环输出单链表</span></span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR\n\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"单链表:\n"</span>);</span><br><span class="line">        <span class="keyword">while</span>(p)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-5d"</span>,p-&gt;data);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,e;LinkList p;<span class="keyword">char</span> a;</span><br><span class="line">    LinkList L;<span class="comment">//定义单链表</span></span><br><span class="line">    InitList(L);<span class="comment">//初始化单链表</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要插入单链表的元素个数:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要插入单链表的元素:"</span>);</span><br><span class="line">    <span class="comment">//CreateList_H(L,i);//单链表前插法</span></span><br><span class="line">    CreateList_R(L,i);<span class="comment">//单链表后插法</span></span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要插入单链表的元素位置:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要插入单链表的元素:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e);</span><br><span class="line">    ListInsert(L,i,e);<span class="comment">//单链表插入</span></span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要获取的单链表元素位置:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    GetElem(L,i,e);<span class="comment">//单链表取值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第%d个元素是%d\n\n"</span>,i,e);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要查找的值:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e);</span><br><span class="line">    p=LocateELem(L,e);<span class="comment">//单链表查值</span></span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"单链表不存在该值\n\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"单链表中该值地址为%d\n\n"</span>,p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要删除的单链表元素位置:"</span>);<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    ListDelete(L,i);<span class="comment">//单链表删除</span></span><br><span class="line">    reList(L);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><center>如果哪个地方可以简化的可以评论告诉我</center><hr><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/19/hello-world/"/>
      <url>/2019/09/19/hello-world/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sun Oct 06 2019 04:06:12 GMT+0800 (GMT+08:00) --><br><p>欢迎来到<a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>! 这是我的第一篇博客.如果你在阅读过程中有任何疑问,你都可以在<a href="https://cshisan.github.io/" target="_blank" rel="noopener">这里</a>找到你想要的答案或者你可以在<a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>联系我.</p><p>Welcome to <a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>! This is my very first post.If you get any problems when Reading, you can find the answer in <a href="https://cshisan.github.io/" target="_blank" rel="noopener">Here</a> or you can ask me on <a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://cshisan.github.io/" target="_blank" rel="noopener">CShisan’s Blog</a>へようこそ！ これは私の最初の投稿です。読書中に問題が発生した場合は、<a href="https://cshisan.github.io/" target="_blank" rel="noopener">Here</a>または<a href="https://github.com/CShisan" target="_blank" rel="noopener">GitHub</a>で質問してください。</p><br><h1 id="命令展示"><a href="#命令展示" class="headerlink" title="命令展示"></a>命令展示</h1><h2 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Writing</a></p><h2 id="创建一个页面"><a href="#创建一个页面" class="headerlink" title="创建一个页面"></a>创建一个页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page xxx(xxx代表页面名字)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Creat</a></p><h2 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Server</a></p><h2 id="创建一个静态文件包"><a href="#创建一个静态文件包" class="headerlink" title="创建一个静态文件包"></a>创建一个静态文件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Generating</a></p><h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://cshisan.github.io/2019/09/15/hello-world/#more" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
